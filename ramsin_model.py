# generated by datamodel-codegen:
#   filename:  ramsin.json
#   timestamp: 2023-03-27T22:45:33+00:00

from __future__ import annotations

from ramsin_model_config import RamsinConfig

from typing import List

from pydantic import BaseSettings


class ModelAdvRamsin(BaseSettings):
    class Config(RamsinConfig): pass
    advanced_ramsin: str


class ModelGrids(BaseSettings):
    class Config(RamsinConfig): pass
    expnme: str
    runtype: str
    timeunit: str
    timmax: int
    imonth1: int
    idate1: int
    iyear1: int
    itime1: int
    nnxp: int
    nnyp: int
    nnzp: int
    nzg: int
    nzs: int
    deltax: float
    deltay: float
    deltaz: float
    dzrat: float
    dzmax: float
    fixlevels: int
    zz: List[float]
    dtlong: float
    polelat: float
    polelon: float
    centlat: float
    centlon: float


class CcattInfo(BaseSettings):
    class Config(RamsinConfig): pass
    ccatt: int
    chemistry: int
    chem_timestep: float
    chem_assim: int
    srcmapfn: str
    aerosol: int
    aer_assim: int
    aer_timestep: float


class ModelFileInfo(BaseSettings):
    class Config(RamsinConfig): pass
    initial: int
    varfpfx: str
    tnudcent: float
    nudlat: int
    tnudlat: float
    tnudtop: float
    znudtop: float
    ipos: int
    ioutput: int
    hfilout: str
    afilout: str
    frqhis: float
    frqanl: float
    topfiles: str
    sfcfiles: str
    sstfpfx: str
    ndvifpfx: str
    itoptfn: str
    isstfn: str
    ivegtfn: str
    isoilfn: str
    ndvifn: str


class ModelOptions(BaseSettings):
    class Config(RamsinConfig): pass
    iswrtyp: int
    ilwrtyp: int
    radfrq: float
    nnqparm: int
    closure_type: str
    nnshcu: int
    confrq: float
    shcufrq: float
    isfcl: int
    isfcl_ocean: int
    soil_moist_fail: str
    usdata_in: str
    usmodel_in: str
    mcphys_type: int
    level: int


class IsanControl(BaseSettings):
    class Config(RamsinConfig): pass
    isan_inc: int
    iapr: str
    varpfx: str


class IsanIsentropic(BaseSettings):
    class Config(RamsinConfig): pass
    icfiletype: int
    icprefix: str
    wind_u_varname: str
    wind_v_varname: str
    temperature_varname: str
    geo_varname: str
    ur_varname: str
    initial_latitude: float
    final_latitude: float
    initial_longitude: float
    final_longitude: float
    z_max_level: int
    scale_factor: List[float]


class Post(BaseSettings):
    class Config(RamsinConfig): pass
    nvp: int
    vp: List[str]
    gprefix: str
    csvfile: str
    anl2gra: str
    proj: str
    mean_type: str
    lati: List[float]
    latf: List[float]
    loni: List[float]
    lonf: List[float]
    zlevmax: List[int]
    ipresslev: int
    inplevs: int
    iplevs: List[int]
    ascii_data: str
    site_lat: float
    site_lon: float


class RamsinBasic(BaseSettings):
    class Config(RamsinConfig): pass
    model_adv_ramsin: ModelAdvRamsin
    model_grids: ModelGrids
    ccatt_info: CcattInfo
    model_file_info: ModelFileInfo
    model_options: ModelOptions
    isan_control: IsanControl
    isan_isentropic: IsanIsentropic
    post: Post
